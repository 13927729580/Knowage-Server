#set($category = $chart.VALUES.CATEGORY)
#set($serie = $chart.VALUES.SERIE)
#set($font = $chart.FONT)
#set($axis = $chart.AXIS)
#set($height = $chart.height)
#set($width = $chart.width)
#set($chartType = $chart.type)
#set($dataRows = $data.rows)
#set($colorsPallete = $chart.COLORPALETTE)
#set($dataFields = $data.metaData.fields)
#set($dataColumnsMapper = {})

#foreach ($dataField in $dataFields) ## conversion column name to internal column name
	#if($dataField.class.name == 'java.util.LinkedHashMap')
		#set($workAroundNoPrint = $dataColumnsMapper.put($dataField.header , $dataField.name))
	#end
#end

#set($columnsNeeded = {})

#set($columnCounter = 0)

#set($serieNeeded = {})

#set($serieCounter = 0)

#set($colorsRequired = {})

#set($colorsReqCounter = 0)

#foreach($value in $category) 
 #set($columnsNeeded[$columnCounter] = $value.column)
 #set($columnCounter = $columnCounter + 1)
#end

#foreach($value in $serie) 
 #set($serieNeeded[$serieCounter] = $value.column)
 #set($serieCounter = $serieCounter + 1)
#end

#foreach($value in $colorsPallete.COLOR) 
	#set($colorsRequired[$colorsReqCounter] = $value.value)
	#set($colorsReqCounter = $colorsReqCounter + 1)
#end

#set($groups = $datasettransformer.getGroupsForParallelChart($columnsNeeded,$dataColumnsMapper,$dataRows))

#set($series = $datasettransformer.getSeriesForParallelChart($serieNeeded))

#set($colorsPal = $datasettransformer.getColorPallete($colorsRequired))

#set($result = $datasettransformer.toParallelChart($columnsNeeded,$dataColumnsMapper,$dataRows, $serieNeeded))

{
 chart: 
 {
  type: '$chartType',
  serie: '$series',
  groups: '$groups',
  group: '$columnsNeeded[0]',
  font: '$font',
  width: '$width',
  height: '$height',
  colors: '$colorsPal'
  
 },
 axis: 
 {
  color: '$axis.COLOR.value',
  fill: '$axis.FILL.value',
  colnamepadd: '$axis.COLNAMEPADD.value',
  brushcolor: '$axis.BRUSHCOLOR.value',
  brushwidth: '$axis.BRUSHWIDTH.value'
  
 },
 limit:
 {
 	max: '$chart.LIMIT.MAX.value',
 	serie: '$chart.LIMIT.SERIE.value',
 	order: '$chart.LIMIT.ORDER.value'
 
 },
 emptymessage:
	{
		text: '$chart.EMPTYMESSAGE.text',
		height: '$chart.EMPTYMESSAGE.height',
		paddingLeft: '$chart.EMPTYMESSAGE.paddingLeft',
		position: '$chart.EMPTYMESSAGE.position',
		
		style:
		{
			fontType: '$chart.EMPTYMESSAGE.EMPTYMESSAGE-STYLE.fontType',
			fontStyle: '$chart.EMPTYMESSAGE.EMPTYMESSAGE-STYLE.fontStyle',
			fontSize: '$chart.EMPTYMESSAGE.EMPTYMESSAGE-STYLE.fontSize',
			fontColor: '$chart.EMPTYMESSAGE.EMPTYMESSAGE-STYLE.fontColor',
			textAlign: '$chart.EMPTYMESSAGE.EMPTYMESSAGE-STYLE.textAlign'
		}
	},
 
 
 title:
	{
		text: '$chart.TITLE.text',
		height: '$chart.TITLE.height',
		paddingLeft: '$chart.TITLE.paddingLeft',
		position: '$chart.TITLE.position',
		
		style:
		{
			fontType: '$chart.TITLE.TITLE-STYLE.fontType',
			fontStyle: '$chart.TITLE.TITLE-STYLE.fontStyle',
			fontSize: '$chart.TITLE.TITLE-STYLE.fontSize',
			fontColor: '$chart.TITLE.TITLE-STYLE.fontColor',
			textAlign: '$chart.TITLE.TITLE-STYLE.textAlign'
		}
	},
	
	subtitle:
	{
		text: '$chart.SUBTITLE.text',
		height: '$chart.SUBTITLE.height',
		paddingLeft: '$chart.SUBTITLE.paddingLeft',
		position: '$chart.SUBTITLE.position',
		
		style:
		{
			fontType: '$chart.SUBTITLE.SUBTITLE-STYLE.fontType',
			fontStyle: '$chart.SUBTITLE.SUBTITLE-STYLE.fontStyle',
			fontSize: '$chart.SUBTITLE.SUBTITLE-STYLE.fontSize',
			fontColor: '$chart.SUBTITLE.SUBTITLE-STYLE.fontColor',
			textAlign: '$chart.SUBTITLE.SUBTITLE-STYLE.textAlign'
		}
	},
data:
 [
 	$result
 ]
}