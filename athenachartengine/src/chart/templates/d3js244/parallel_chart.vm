#set($category = $chart.VALUES.CATEGORY)
#set($serie = $chart.VALUES.SERIE)
#set($font = $chart.FONT)
#set($axis = $chart.AXIS)
#set($height = $chart.height)
#set($width = $chart.width)
#set($chartType = $chart.type)
#set($dataRows = $data.rows)
#set($colorsPallete = $chart.COLORPALETTE)
#set($dataFields = $data.metaData.fields)
#set($dataColumnsMapper = {})

#foreach ($dataField in $dataFields) ## conversion column name to internal column name
	#if($dataField.class.name == 'java.util.LinkedHashMap')
		#set($workAroundNoPrint = $dataColumnsMapper.put($dataField.header , $dataField.name))
	#end
#end

#set($columnsNeeded = {})

#set($columnCounter = 0)

#set($groupingFunction = {})

#set($serieNeeded = {})

#set($serieCounter = 0)

#set($colorsRequired = {})

#set($colorsReqCounter = 0)

#foreach($value in $category) 
 #set($columnsNeeded[$columnCounter] = $value.column)
 #set($columnCounter = $columnCounter + 1)
#end

#foreach($value in $serie) 
 #set($serieNeeded[$serieCounter] = $value.column)
 #set($groupingFunction[$serieCounter] = $value.groupingFunction)
 #set($serieCounter = $serieCounter + 1)
#end

#foreach($value in $colorsPallete.COLOR) 
	#set($colorsRequired[$colorsReqCounter] = $value.value)
	#set($colorsReqCounter = $colorsReqCounter + 1)
#end

#set($groups = $datasettransformer.getGroupsForParallelChart($columnsNeeded,$dataColumnsMapper,$dataRows))

#set($series = $datasettransformer.getSeriesForParallelChart($serieNeeded, $groupingFunction))

#set($colorsPal = $datasettransformer.getColorPallete($colorsRequired))

#set($result = $datasettransformer.toParallelChart($columnsNeeded,$dataColumnsMapper,$dataRows, $serieNeeded, $groupingFunction))

{
 	chart: 
 	{
  		type: '$chart.type',
  		serie: '$series',
  		groups: '$groups',
  		tooltip: '$columnsNeeded[1]',
  		group: '$columnsNeeded[0]',
  		font: '$chart.style.fontFamily',
  		width: '$chart.width',
  		height: '$chart.height',
  		colors: '$colorsPal'  
 	},
 	
 	limit:
 	{
	 	maxNumberOfLines: '$chart.LIMIT.style.maxNumberOfLines',
	 	serieFilterColumn: '$chart.LIMIT.style.serieFilterColumn',
	 	orderTopMinBottomMax: '$chart.LIMIT.style.orderTopMinBottomMax' 
 	},
 	
 	axis: 
 	{
  		axisColor: '$chart.AXES_LIST.style.axisColor',
  		axisColNamePadd: '$chart.AXES_LIST.style.axisColNamePadd',
  		brushColor: '$chart.AXES_LIST.style.brushColor',
  		brushWidth: '$chart.AXES_LIST.style.brushWidth' 
 	},
 	
 	tooltip:
 	{
		fontFamily: '$chart.PARALLEL_TOOLTIP.style.fontFamily',
		fontSize: '$chart.PARALLEL_TOOLTIP.style.fontSize',
		minWidth: '$chart.PARALLEL_TOOLTIP.style.minWidth',
		maxWidth: '$chart.PARALLEL_TOOLTIP.style.maxWidth',
		minHeight: '$chart.PARALLEL_TOOLTIP.style.minHeight',
		maxHeight: '$chart.PARALLEL_TOOLTIP.style.maxHeight',
		padding: '$chart.PARALLEL_TOOLTIP.style.padding',
		border: '$chart.PARALLEL_TOOLTIP.style.border',
	 	borderRadius: '$chart.PARALLEL_TOOLTIP.style.borderRadius'
 	},
 	 	
 	emptymessage:
	{
		text: '$chart.EMPTYMESSAGE.text',		
		
		style:
		{
			align: '$chart.EMPTYMESSAGE.style.align',
			fontFamily: '$chart.EMPTYMESSAGE.style.fontFamily',
			fontWeight: '$chart.EMPTYMESSAGE.style.fontWeight',			
			fontSize: '$chart.EMPTYMESSAGE.style.fontSize',
			color: '$chart.EMPTYMESSAGE.style.color'
		}
	},
	
	legend:
	{
		title:
		{
			style:
			{
				fontFamily: '$chart.LEGEND.TITLE.style.fontFamily',			
				fontSize: '$chart.LEGEND.TITLE.style.fontSize',
						
				#if($chart.LEGEND.TITLE.style.fontWeight == 'italic' || $chart.LEGEND.TITLE.style.fontWeight == 'normal')
	    			fontStyle: '$chart.LEGEND.TITLE.style.fontWeight',
				#elseif($chart.LEGEND.TITLE.style.fontWeight == 'underline')
	    			textDecoration: '$chart.LEGEND.TITLE.style.fontWeight',
				#elseif($chart.LEGEND.TITLE.style.fontWeight == 'bold')		        			
	    			fontWeight: '$chart.LEGEND.TITLE.style.fontWeight',
	    		#end
			}			
		},
		element:
		{
			style:
			{
				fontFamily: '$chart.LEGEND.ELEMENT.style.fontFamily',		
				fontSize: '$chart.LEGEND.ELEMENT.style.fontSize',
						
				#if($chart.LEGEND.ELEMENT.style.fontWeight == 'italic' || $chart.LEGEND.ELEMENT.style.fontWeight == 'normal')
	    			fontStyle: '$chart.LEGEND.ELEMENT.style.fontWeight',
				#elseif($chart.LEGEND.ELEMENT.style.fontWeight == 'underline')
	    			textDecoration: '$chart.LEGEND.ELEMENT.style.fontWeight',
				#elseif($chart.LEGEND.ELEMENT.style.fontWeight == 'bold')		        			
	    			fontWeight: '$chart.LEGEND.ELEMENT.style.fontWeight',
	    		#end
			}
		}
	},
 
 	title:
	{
		text: '$chart.TITLE.text',		
		
		style:
		{
			fontFamily: '$chart.TITLE.style.fontFamily',
			fontSize: '$chart.TITLE.style.fontSize',
			color: '$chart.TITLE.style.color',
			align: '$chart.TITLE.style.align',
					
			#if($chart.TITLE.style.fontWeight == 'italic' || $chart.TITLE.style.fontWeight == 'normal')
    			fontStyle: '$chart.TITLE.style.fontWeight',
			#elseif($chart.TITLE.style.fontWeight == 'underline')
    			textDecoration: '$chart.TITLE.style.fontWeight',
			#elseif($chart.TITLE.style.fontWeight == 'bold')		        			
    			fontWeight: '$chart.TITLE.style.fontWeight',
    		#end
		}
	},
	
	subtitle:
	{	
		text: '$chart.SUBTITLE.text',		
		
		style:
		{
			fontFamily: '$chart.SUBTITLE.style.fontFamily',
			fontSize: '$chart.SUBTITLE.style.fontSize',
			color: '$chart.SUBTITLE.style.color',
			align: '$chart.SUBTITLE.style.align',
					
			#if($chart.SUBTITLE.style.fontWeight == 'italic' || $chart.SUBTITLE.style.fontWeight == 'normal')
    			fontStyle: '$chart.SUBTITLE.style.fontWeight',
			#elseif($chart.SUBTITLE.style.fontWeight == 'underline')
    			textDecoration: '$chart.SUBTITLE.style.fontWeight',
			#elseif($chart.SUBTITLE.style.fontWeight == 'bold')		        			
    			fontWeight: '$chart.SUBTITLE.style.fontWeight',
    		#end
		}
	},
	
	data:
 	[
 		$result
 	]
}