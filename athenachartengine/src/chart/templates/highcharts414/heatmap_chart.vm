#set($category = $chart.VALUES.CATEGORY)
#set($chartType = $CHART.type)
#set($dataRows = $data.rows)
#set($dataFields = $data.metaData.fields) ## columns of data table
#set($dataColumnsMapper = {})

#foreach ($dataField in $dataFields) ## conversion column name to internal column name
	#if($dataField.class.name == 'java.util.LinkedHashMap')
		#set($workAroundNoPrint = $dataColumnsMapper.put($dataField.header , $dataField.name))
	#end
#end

#set($columnsNeeded = {})

#set($columnCouter = 0)

   
#foreach($value in $category) 
 #set($columnsNeeded[$columnCouter] = $value.column)
 #set($columnCouter = $columnCouter + 1)
#end

#set($serie = $chart.VALUES.SERIE.name)

#set($groupingFunction = $chart.VALUES.SERIE.groupingFunction)

#set($serieName = $datasettransformer.getSerieName($serie))

#set($columnNames = $datasettransformer.getColumnNames($columnsNeeded))

#set($firstresult = $datasettransformer.getData($dataRows,$serie,$columnsNeeded,$dataColumnsMapper, $groupingFunction))

#set($dateresult = $datasettransformer.getDateResult($firstresult,$columnsNeeded[0]))

#set($storeresult = $datasettransformer.getStoreResult($firstresult,$columnsNeeded[1]))

#set($result = $datasettransformer.getResult($firstresult, $serie, $columnsNeeded))

#set($axisList = $chart.AXES_LIST.AXIS)

    #set($xAxisList = {}) ## X Axises list container
    #set($yAxisList = {}) ## Y Axises list container
    #set($xAxisPositions = {}) ## X Axises integer positions list, for series references
    #set($yAxisPositions = {}) ## Y Axises integer positions list, for series references
    #set($xAxisCounter = 0) 
    #set($yAxisCounter = 0) 
    
    #foreach($axis in $axisList)
	 	#if($axis.type == 'Category')
	 		#set($workAroundNoPrint = $xAxisList.put($axis.alias, $axis))
	 		#set($workAroundNoPrint = $xAxisPositions.put($axis.alias , $xAxisCounter))
	 		
	 		#set($xAxisCounter = $xAxisCounter + 1)
	 	#end
	 	
	 	#if($axis.type == 'Serie')
	 		
		 		#set($workAroundNoPrint = $yAxisList.put($axis.alias , $axis))
		 		#set($workAroundNoPrint = $yAxisPositions.put($axis.alias , $yAxisCounter))
	 		
		 		#set($yAxisCounter = $yAxisCounter + 1)
	 		
	 	#end
	#end

{
 	chart: 
 	{
 		type: '$chartType',
	  	height: '$chart.height',
	  	width: '$chart.width',
  
  		style:
		{			
			fontFamily: '$chart.style.fontFamily',
			fontSize: '$chart.style.fontSize',
			backgroundColor: '$chart.style.backgroundColor',
					
			#if($chart.style.fontWeight == 'italic' || $chart.style.fontWeight == 'normal')
    			fontStyle: '$chart.style.fontWeight',
			#elseif($chart.style.fontWeight == 'underline')
    			textDecoration: '$chart.style.fontWeight',
			#elseif($chart.style.fontWeight == 'bold')		        			
    			fontWeight: '$chart.style.fontWeight',
    		#end	
  		}
 	},
 
 	colors: 
 	[ 	 
 		#*
 			If user specified more than one color from the color palette
 			on the Designer when creating the chart, then we have an array
 			list of elements. Otherwise, we are dealing with a hashmap.
 			
 			In the first case, create an array of colors. In the second 
 			case take the only color user specified and put it as the only
 			element of the array that we are now creating.
 			
 			@modifiedBy: danristo (danilo.ristovski@mht.net)
 		*#	
 			
		#if ($chart.COLORPALETTE.COLOR.class.name == 'java.util.ArrayList')
			#foreach($color in $chart.COLORPALETTE.COLOR)
				'$color.get('value')',			
			#end			
		#else
			'$chart.COLORPALETTE.COLOR.value'
		#end			
    ],
 
 	emptymessage:
	{
		text: '$chart.EMPTYMESSAGE.text',
		
		style:
		{
			fontFamily: '$chart.EMPTYMESSAGE.style.fontFamily',
			fontSize: '$chart.EMPTYMESSAGE.style.fontSize',
			fontColor: '$chart.EMPTYMESSAGE.style.color',
			textAlign: '$chart.EMPTYMESSAGE.style.align',
					
			#if($chart.EMPTYMESSAGE.style.fontWeight == 'italic' || $chart.EMPTYMESSAGE.style.fontWeight == 'normal')
    			fontStyle: '$chart.EMPTYMESSAGE.style.fontWeight',
			#elseif($chart.EMPTYMESSAGE.style.fontWeight == 'underline')
    			textDecoration: '$chart.EMPTYMESSAGE.style.fontWeight',
			#elseif($chart.EMPTYMESSAGE.style.fontWeight == 'bold')		        			
    			fontWeight: '$chart.EMPTYMESSAGE.style.fontWeight',
    		#end	
		}
	},
	
	title:
	{
		text: '$chart.TITLE.text',
		
		style:
		{
			fontFamily: '$chart.TITLE.style.fontFamily',
			fontSize: '$chart.TITLE.style.fontSize',
			fontColor: '$chart.TITLE.style.color',
			textAlign: '$chart.TITLE.style.align',
					
			#if($chart.TITLE.style.fontWeight == 'italic' || $chart.TITLE.style.fontWeight == 'normal')
    			fontStyle: '$chart.TITLE.style.fontWeight',
			#elseif($chart.TITLE.style.fontWeight == 'underline')
    			textDecoration: '$chart.TITLE.style.fontWeight',
			#elseif($chart.TITLE.style.fontWeight == 'bold')		        			
    			fontWeight: '$chart.TITLE.style.fontWeight',
    		#end	
		}
	},
	
	subtitle:
	{
		text: '$chart.SUBTITLE.text',
		
		style:
		{
			fontFamily: '$chart.SUBTITLE.style.fontFamily',
			fontSize: '$chart.SUBTITLE.style.fontSize',
			fontColor: '$chart.SUBTITLE.style.color',
			textAlign: '$chart.SUBTITLE.style.align',
					
			#if($chart.SUBTITLE.style.fontWeight == 'italic' || $chart.SUBTITLE.style.fontWeight == 'normal')
    			fontStyle: '$chart.SUBTITLE.style.fontWeight',
			#elseif($chart.SUBTITLE.style.fontWeight == 'underline')
    			textDecoration: '$chart.SUBTITLE.style.fontWeight',
			#elseif($chart.SUBTITLE.style.fontWeight == 'bold')		        			
    			fontWeight: '$chart.SUBTITLE.style.fontWeight',
    		#end	
		}
	},
	
	legend:
	{
		symbolWidth: '$chart.LEGEND.symbolWidth',
		
		style:
		{
			align: '$chart.LEGEND.style.align'
		}
	},
	
	tooltip:
	{
		style:
		{
			align: '$chart.TOOLTIP.style.align',
			fontFamily: '$chart.TOOLTIP.style.fontFamily',
			fontSize: '$chart.TOOLTIP.style.fontSize',
			fontColor: '$chart.TOOLTIP.style.color'
		}
	},
	
	
	xaxis:
	{		
		## We have only one X-axis, hence use the only present key of this axis (the single X-axis key)
		## (danilo.ristovski@mht.net)
		
		#foreach($xAxisKey in $xAxisList.keySet())
			
			#set($xAxis = $xAxisList.get($xAxisKey))
			
			style:
			{
				fontFamily: '$xAxis.style.fontFamily',
				fontWeight: '$xAxis.style.fontWeight',
				fontSize: '$xAxis.style.fontSize',
				fontColor: '$xAxis.style.color'
			}
		
		#end
	},
	
	yaxis:
	{		
		## We have only one Y-axis, hence use the only present key of this axis (the single Y-axis key)
		## (danilo.ristovski@mht.net)
		
		#foreach($yAxisKey in $yAxisList.keySet())
			
			#set($yAxis = $yAxisList.get($yAxisKey))
			
			style:
			{
				fontFamily: '$yAxis.style.fontFamily',
				fontWeight: '$yAxis.style.fontWeight',
				fontSize: '$yAxis.style.fontSize',
				fontColor: '$yAxis.style.color'
			}
					
		#end
	},
	
	## Additional data needed for rendering the HEATMAP chart	
	## (danilo.ristovski@mht.net)	
	additionalData:
	{
		dateresult: $dateresult,
  		storeresult: $storeresult,
  		serie: $serieName,
  		columns: $columnNames
	},
	
	#*
		Remove credits from the TREEMAP chart (the "Highcharts.com" link at the 
		bottom right side of the chart).
		@author: danristo (danilo.ristovski@mht.net)
	 *# 
	credits: 
	{ 
    	enabled: false
    },
	
	data:
 	[
 		$result
 	]
}