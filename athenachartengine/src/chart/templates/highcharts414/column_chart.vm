#set($dataFields = $data.metaData.fields) ## columns of data table
#set($dataColumnsMapper = {})

#foreach ($dataField in $dataFields) ## conversion column name to internal column name
	#if($dataField.class.name == 'java.util.LinkedHashMap')
		#set($workAroundNoPrint = $dataColumnsMapper.put($dataField.header , $dataField.name))
	#end
#end

#set($rows = $data.rows) ## data in table rows


#set($categorieColumns = $chart.VALUES.CATEGORY) ## metadata related to categories
#set($categorieColumnsMapped = $dataColumnsMapper.get($categorieColumns.column)) ## "product" -> "column_3"


#set($enableDrilldown = false)
#if($categorieColumns.groupby != '')
	#set($enableDrilldown = true)
#end

#set($series = $chart.VALUES.SERIE) ## metadata related to series

#set($seriesMap = {}) ## conversion series metadata to map object

#if($series.class.name == 'java.util.LinkedHashMap')
	#set($workAroundNoPrint = $seriesMap.put($series.name , $series))
#else
	#set($serieKeyFeed = 0)
	#foreach($serie in $series)
		#set($serieMapKey = $serie.column + '_' + $serieKeyFeed)
		#set($workAroundNoPrint = $seriesMap.put($serieMapKey , $serie))
		
		#set($serieKeyFeed = $serieKeyFeed + 1)
	#end
#end

{
	meta: {
		drilldownEnabled: $enableDrilldown,
	},

    chart: {
    	#set($chartTypeToPrint = 'column')
    	#if($chartType == 'line')
    		#set($chartTypeToPrint = 'line')
    	#end
    
        type: '$chartTypeToPrint',
        backgroundColor: '$chart.style.backgroundColor', ##outer chart background
        
        #if($chart.orientation == 'horizontal' && $chartTypeToPrint != 'pie')
        inverted: true,
        #end
        
        #if($chart.height != '')
        height: $chart.height,
        #end
        
        #if($chart.width != '')
    	width: $chart.width,
    	#end
        
        borderColor: '$chart.style.backgroundColor',
    	style:{
    		#foreach($styleName in $chart.style.keySet())
    			#set ($chartStyleValue = $chart.style[$styleName])
    			#if ($styleName == 'fontWeight' && $chartStyleValue == 'italic')
        			fontStyle: 'italic',
				#elseif($styleName == 'fontWeight' && $chartStyleValue == 'underline')
        			textDecoration: 'underline',
				#else		        			
        			$styleName: '$chartStyleValue',
        		#end
    		#end
    	},
    	
    	#if($enableDrilldown)
	    events: {
			drilldown: handleDrilldown,
			drillup: handleDrillup
	    },
	    #end
    },
    
    colors: [
		#foreach($color in $chart.COLORPALETTE.COLOR)
		'$color.value', 
		#end
    ],
    
    title: {
        text: '$chart.TITLE.text',
        
        #set ($titleAlign = $chart.TITLE.style.align)
        #if ($titleAlign != '' )
        
        	#if ($titleAlign == 'left')
        	x: 70,
        	#elseif ($titleAlign == 'right')
        	x: -70,
        	#end
        
        align: '$titleAlign',
        #end
        
        style:{
        #foreach($styleName in $chart.TITLE.style.keySet())
        	#set ($axisTitleStyle = $chart.TITLE.style[$styleName])
    		#if ($styleName == 'fontWeight' && $axisTitleStyle == 'italic')
    			fontStyle: 'italic',
			#elseif($styleName == 'fontWeight' && $axisTitleStyle == 'underline')
    			textDecoration: 'underline',
			#else		        			
    			$styleName: '$axisTitleStyle',
    		#end
		#end
	    }
    },
    
    #if($chart.SUBTITLE.text != '')
    subtitle: {
        text: '$chart.SUBTITLE.text',
        
        #set ($subtitleAlign = $chart.SUBTITLE.style.align)
        #if ($subtitleAlign != '' )
        
        	#if ($subtitleAlign == 'left')
        	x: 70,
        	#elseif ($subtitleAlign == 'right')
        	x: -70,
        	#end
        
        align: '$subtitleAlign',
        #end
        
        style:{
        #foreach($styleName in $chart.SUBTITLE.style.keySet())
        	#set ($axisSubtitleStyle = $chart.SUBTITLE.style[$styleName])
    		#if ($styleName == 'fontWeight' && $axisSubtitleStyle == 'italic')
    			fontStyle: 'italic',
			#elseif($styleName == 'fontWeight' && $axisSubtitleStyle == 'underline')
    			textDecoration: 'underline',
			#else		        			
    			$styleName: '$axisSubtitleStyle',
    		#end
		#end
		}
    },
    #end
    
    #if ($chart.LEGEND.show != '' && $chart.LEGEND.show == 'true')
    legend: {
        #if ($chart.LEGEND.layout != '' )
        layout: '$chart.LEGEND.layout',
        #end
        #if ($chart.LEGEND.position != '' )
        align: '$chart.LEGEND.position',
        #end
        
        #if ($chart.LEGEND.floating != '')
        floating: $chart.LEGEND.floating,
        #end
        
    	#if($chart.LEGEND.floating == 'true')
    	
	        #if($chart.LEGEND.x != '')
	        x: $chart.LEGEND.x,
		    #end
	        
	        #if($chart.LEGEND.y != '')
	        y: $chart.LEGEND.y,
	    	#end
    	
    	#end
        
        #if($chart.LEGEND.style.borderWidth != '')
        borderWidth: $chart.LEGEND.style.borderWidth,
	    #end
        
        #if($chart.LEGEND.style.backgroundColor != '')
        backgroundColor: '$chart.LEGEND.style.backgroundColor',
	    #end
	    
        shadow: true,
        itemStyle: { 
        	'color': '$chart.LEGEND.style.color', 
        	'fontSize': '$chart.LEGEND.style.fontSize', 
        	'fontWeight': '$chart.LEGEND.style.fontWeight' 
        }
    },
    #end

    ## Axises selection
    #set($axisList = $chart.AXES_LIST.AXIS)

    #set($xAxisList = {}) ## X Axises list container
    #set($yAxisList = {}) ## Y Axises list container
    #set($xAxisPositions = {}) ## X Axises integer positions list, for series references
    #set($yAxisPositions = {}) ## Y Axises integer positions list, for series references
    #set($xAxisCounter = 0) 
    #set($yAxisCounter = 0) 
    
    #foreach($axis in $axisList)
	 	#if($axis.type == 'Category')
	 		#set($workAroundNoPrint = $xAxisList.put($axis.alias , $axis))
	 		#set($workAroundNoPrint = $xAxisPositions.put($axis.alias , $xAxisCounter))
	 		
	 		#set($xAxisCounter = $xAxisCounter + 1)
	 	#end
	 	
	 	#if($axis.type == 'Serie')
	 		#set($workAroundNoPrint = $yAxisList.put($axis.alias , $axis))
	 		#set($workAroundNoPrint = $yAxisPositions.put($axis.alias , $yAxisCounter))
	 		
	 		#set($yAxisCounter = $yAxisCounter + 1)
	 	#end
	#end
	
    xAxis:
	 #foreach($xAxisKey in $xAxisList.keySet())
	 	#set ($xAxis = $xAxisList[$xAxisKey])
	 
	 {
		 title: {
			 text: '$xAxis.TITLE.text',
			 #if( $xAxis.style.rotate && $xAxis.style.rotate != '' )
			 rotation: $xAxis.style.rotate,
			 #end
			 
			 #set ($xTitleAlign = $xAxis.TITLE.style.align)
			 #if( $xTitleAlign != '' )
			 	#if ($xTitleAlign == 'center' )
				align: 'middle',
				#elseif ($xTitleAlign == 'left' )
				align: 'low',
				#elseif ($xTitleAlign == 'right' )
				align: 'high',
				#end
			 #end
			 
			 style:{
	        	#foreach($styleName in $xAxis.TITLE.style.keySet())
		        	#set ($axisTitleStyle = $xAxis.TITLE.style[$styleName])
		        	#if ($styleName == 'fontWeight' && $axisTitleStyle == 'italic')
	        			fontStyle: 'italic',
					#elseif($styleName == 'fontWeight' && $axisTitleStyle == 'underline')
	        			textDecoration: 'underline',
					#elseif($axisTitleStyle != '')
	        			$styleName: '$axisTitleStyle',
	        		#end
	        	#end
		     },
		 },

		 #if($xAxis.position == 'top')
		 opposite: true,
		 #end
		 
		 type: 'category',
	 },
	 #end
    
    
    yAxis: [
        ## Serie add
        #foreach($yAxisKey in $yAxisList.keySet())
        	#set ($yAxis = $yAxisList[$yAxisKey] )
        
        {
        	min: 0,
        	title: {
        		text: '$yAxis.TITLE.text',
        		
        		#*
        		#if( $yAxis.style.rotate != '' ) 
        		rotation: $yAxis.style.rotate,
        		#end
        		*#
        		
        		#if( $yAxis.TITLE.style.align != '' )
        			#if ($yAxis.TITLE.style.align == 'center' )
					align: 'middle',
					#else
					align: '$yAxis.TITLE.style.align',
					#end
				#end
			 
        		style:{
		        	#foreach($styleName in $yAxis.TITLE.style.keySet())
		        		#set ($axisTitleStyle = $yAxis.TITLE.style[$styleName])
		        		#if ($styleName == 'fontWeight' && $axisTitleStyle == 'italic')
		        			fontStyle: 'italic',
						#elseif($styleName == 'fontWeight' && $axisTitleStyle == 'underline')
		        			textDecoration: 'underline',
						#else		        			
		        			$styleName: '$axisTitleStyle',
		        		#end
		        	#end
        		},
        	},
        	
        	labels: {
    		#if( $yAxis.style != '' ) 
        		style:{
	        	#foreach($styleName in $yAxis.style.keySet())
	        		#set ($axisStyle = $yAxis.style[$styleName])
	        		#if ($styleName == 'fontWeight' && $axisTitleStyle == 'italic')
	        			fontStyle: 'italic',
					#elseif($styleName == 'fontWeight' && $axisTitleStyle == 'underline')
	        			textDecoration: 'underline',
					#else		        			
	        			$styleName: '$axisStyle',
	        		#end
	        	#end
        		},
        	#end
        		
    		#if( $yAxis.style != '' && $yAxis.style.rotate && $yAxis.style.rotate != '' ) 
        		rotation: $yAxis.style.rotate,
    		#end
            },
        	
	        #if($yAxis.MAJORGRID.interval != '')
        	tickInterval: $yAxis.MAJORGRID.interval,
		    #end
		    
	        #if($yAxis.MAJORGRID.style.color != '')
        	gridLineColor: '$yAxis.MAJORGRID.style.color',
		    #end
        	
        	#set($typeline = $yAxis.MAJORGRID.style.typeline)
        	#if($yAxis.MAJORGRID.style.typeline != '')
	        	#if($typeline == 'dashed')
	        		#set($convertedTypeline = 'Dash')
	        	#elseif($typeline == 'dotted')
	        		#set($convertedTypeline = 'Dot')
	    		#elseif($typeline == 'solid')
	        		#set($convertedTypeline = 'Solid')
				#else
	        		#set($convertedTypeline = $typeline)
	        	#end
	        	gridLineDashStyle: '$convertedTypeline',
        	#end
        	
	        #if($yAxis.MINORGRID.interval != '')
        	minorTickInterval: $yAxis.MINORGRID.interval,
		    #end
		    
	        #if($yAxis.MINORGRID.style.color != '')
        	minorGridLineColor: '$yAxis.MINORGRID.style.color',
		    #end
        	
        	#set($typeline = $yAxis.MINORGRID.style.typeline)
        	#if($typeline == 'dashed')
        		#set($convertedMinorTpeline = 'Dash')
    		#elseif($typeline == 'dotted')
        		#set($convertedMinorTpeline = 'Dot')
    		#elseif($typeline == 'solid')
        		#set($convertedMinorTpeline = 'Solid')
        	#end
        	minorGridLineDashStyle: '$convertedMinorTpeline',
        	
        	#if($yAxis.position == 'right')
        	opposite: true,
        	#end
        	
        	stackLabels: {
        		enabled: true
        	},
        },
        #end
        ## FINE Serie add
            
    ],
    
	series: [
	#foreach($valueKey in $seriesMap.keySet())
	    #set($relatedSerie = $seriesMap.get($valueKey))
	    	
	    {	
		#set($relatedSerieColor = false)
		#set($relatedSerieColor = $relatedSerie.color)
		#if($relatedSerieColor && $relatedSerieColor != '')
			color: '$relatedSerieColor',
	    #end
		
			name: '$relatedSerie.name',
		
		#set($relatedSerieType = '')
		#if($relatedSerie.type)
			#set($relatedSerieType = $relatedSerie.type)
		#end
		#if($relatedSerieType != '')		
			#if($relatedSerieType == 'bar')
				#set($relatedSerieType = 'column')
			#end		
	    	type: '$relatedSerieType',
	    #end
	    
		#set($relatedSerieShowValue = $relatedSerie.showValue)
	    	data: [
	    		#set($relatedSerieColName = "$relatedSerie.column"+"_#if($relatedSerie.groupingFunction)$relatedSerie.groupingFunction#{else}SUM#end")
	    	    #set($serieColumnsMapped = $dataColumnsMapper.get($relatedSerieColName)) ## "Vendite_AVG" -> "column_5" ## "Ricavi_SUM" -> "column_6"
				#foreach($row in $rows)
					#set ($serieValue = $row.get($serieColumnsMapped))
					#set ($serieCategoryName =  $row.get($categorieColumnsMapped))
					{
						drilldown: $enableDrilldown,
						y: $serieValue,
						name: '$serieCategoryName',
						
						#if ($relatedSerieShowValue != '')
						dataLabels: {
		                    enabled: $relatedSerieShowValue
		                }
						#end
					},
				#end
	    	],
	    	
			tooltip: { 
			#set($seriePrefix = $relatedSerie.prefixChar)
			#if($seriePrefix != '')
				valuePrefix: '$seriePrefix',
			#end
				
			#set($seriePostfix = $relatedSerie.postfixChar)
			#if($seriePostfix != '')
				valueSuffix: '$seriePostfix',
			#end
				
			#if ($relatedSerie.precision != '')
				valueDecimals: $relatedSerie.precision ,
			#end
				
			#if ($relatedSerie.TOOLTIP.backgroundColor != '')
                ttBackColor: '$relatedSerie.TOOLTIP.backgroundColor',
			#end
				
			#if ($relatedSerie.TOOLTIP.style.color != '')
				ttColor: '$relatedSerie.TOOLTIP.style.color' ,
			#end
				
			#if ($relatedSerie.TOOLTIP.style.align != '')
				ttAlign: '$relatedSerie.TOOLTIP.style.align' ,
			#end
			
			},
		    	
    	#set($referencedAxis = $relatedSerie.axis)
    		yAxis: $yAxisPositions[$referencedAxis]
	    }, 
	#end
    ],
    
    tooltip: {
        useHTML: true,
        backgroundColor: null,
        borderWidth: 2,
        style: {
            padding: 0
        },
        formatter: function() {
        	var ttColor = this.series.tooltipOptions.ttColor ? this.series.tooltipOptions.ttColor : '';
        	var ttBackColor = this.series.tooltipOptions.ttBackColor ? this.series.tooltipOptions.ttBackColor : '';
        	var ttAlign = this.series.tooltipOptions.ttAlign ? this.series.tooltipOptions.ttAlign : '';
        	var valueDecimals = this.series.tooltipOptions.valueDecimals ? this.series.tooltipOptions.valueDecimals : -1;
        	var valuePrefix = this.series.tooltipOptions.valuePrefix ? this.series.tooltipOptions.valuePrefix + ' ' : '';
        	var valueSuffix = this.series.tooltipOptions.valueSuffix ? ' ' + this.series.tooltipOptions.valueSuffix : '';
        	
        	var thisValue = this.y;
        	if(valueDecimals > -1 ) {
        		thisValue = Highcharts.numberFormat(thisValue, valueDecimals);
        	}
        	thisValue = valuePrefix + thisValue + valueSuffix;
        	
            var result = '<div style="padding:10px;color:' + ttColor + ';background-color:' + ttBackColor + ';text-align:' + ttAlign + ';">';
            result += '<span>' + this.key + '</span><br/>' + this.series.name + ': <strong>' + thisValue + '</strong></div>';
            
            return result;
        }
    },
    
    
    #if($enableDrilldown)
    drilldown: {
        series: []
    },
    #end
    
    lang: {
        noData: "$chart.EMPTYMESSAGE.text"
    },
    noData: {
    	style:{
    	#foreach($styleName in $chart.EMPTYMESSAGE.style.keySet())
    		$styleName: '$chart.EMPTYMESSAGE.style[$styleName]',
    	#end
		}
    },
    
    credits: { ##remove bottom credits text
    	enabled: false
    }
}