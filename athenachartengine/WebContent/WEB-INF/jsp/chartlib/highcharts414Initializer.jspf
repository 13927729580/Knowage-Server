<script type="text/javascript" src="/athenachartengine/js/lib/highcharts/4.1.4/adapters/standalone-framework.js"></script>
<script type="text/javascript" src="/athenachartengine/js/lib/highcharts/4.1.4/highcharts.src.js"></script>
<script type="text/javascript" src="/athenachartengine/js/lib/highcharts/4.1.4/highcharts-more.src.js"></script>
<script type="text/javascript" src="/athenachartengine/js/lib/highcharts/4.1.4/highcharts-3d.js"></script>
<script type="text/javascript" src="/athenachartengine/js/lib/highcharts/4.1.4/modules/exporting.src.js"></script>
<script type="text/javascript" src="/athenachartengine/js/lib/highcharts/4.1.4/modules/no-data-to-display.js"></script>
<script type="text/javascript" src="/athenachartengine/js/lib/highcharts/4.1.4/modules/drilldown.src.js"></script>
<script type="text/javascript" src="/athenachartengine/js/lib/highcharts/4.1.4/modules/heatmap.js"></script>
<script type="text/javascript" src="/athenachartengine/js/lib/highcharts/4.1.4/modules/treemap.js"></script>
<script type="text/javascript" src="/athenachartengine/js/src/treemap/treemap.js"></script>

<script>
	var hostName = '<%=request.getServerName()%>';
	var serverPort = '<%=request.getServerPort()%>';

	function initChartLibrary(panelId) {
		Highcharts.setOptions({
		    chart: {
		 	   renderTo: panelId,
		        backgroundColor: {
		            linearGradient: [0, 0, 500, 500],
		            stops: [
		                [0, 'rgb(255, 255, 255)'],
		                [1, 'rgb(240, 240, 255)']
		            ]
		        },
		        borderWidth: 2,
		        plotBackgroundColor: 'rgba(255, 255, 255, .9)',
		        plotShadow: true,
		        plotBorderWidth: 1
		    },
		    exporting: {
		        url: 'http://192.168.40.100:8080/highcharts-export-web/'
		    },
		    lang: {
	            drillUpText: LN('sbi.chartengine.viewer.drilluptext')
	        }
		});
	};

	function renderChart(chartConf){
		
		if(chartConf.chart.type == 'treemap'){
			
			renderTreemap(chartConf);	
			
		}
		
		else{
			
			new Highcharts.Chart(chartConf);
			
		}
		
	};
	
	function handleDrilldown(e) {
		if (!e.seriesOptions) {
			var chart = this;
			chart.showLoading('Loading...');
			Sbi.chart.viewer.HighchartsDrilldownHelper.drilldown(e.point.name, e.point.series.name);
			var chartServiceManager = Sbi.chart.rest.WebServiceManagerFactory.getChartWebServiceManager();
			var parameters = {
				breadcrumb: Ext.JSON.encode(Sbi.chart.viewer.HighchartsDrilldownHelper.breadcrumb),
				jsonTemplate: Sbi.chart.viewer.ChartTemplateContainer.jsonTemplate
			};
			chartServiceManager.run('drilldownHighchart', parameters, [], function (response) {
				var series = Ext.JSON.decode(response.responseText, true);
	            chart.addSeriesAsDrilldown(e.point, series);
				chart.hideLoading();
			});
		}
	};
	
	function handleDrillup() {
		Sbi.chart.viewer.HighchartsDrilldownHelper.drillup();
	}
	
</script>