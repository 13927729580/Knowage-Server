

<script>
var sbiM=angular.module('sbiModule',[]);

sbiM.config(function($mdThemingProvider) {
	$mdThemingProvider.theme('default').primaryPalette('grey').accentPalette('blue-grey');
});



sbiM.factory('sbiModule_config',function(){
	return {
    	contextName: '<%= GeneralUtilities.getSpagoBiContext() %>',
    	adapterPath: '<%= GeneralUtilities.getSpagoBiContext() + GeneralUtilities.getSpagoAdapterHttpUrl() %>',
    	curr_country: '<%= curr_country %>',
    	curr_language: '<%= curr_language%>',
    	<%-- 		loginUrl: '<%= GeneralUtilities.getSpagoBiContext() %>', // login url, used when session is expired --%>
    	<%--     	currTheme: '<%= currTheme %>', --%>
		<%-- 	supportedLocales: <%= GeneralUtilities.getSupportedLocalesAsJSONArray().toString() %>, --%>
		<%-- 		 localizedDateFormat: '<%= GeneralUtilities.getLocaleDateFormatForExtJs(permanentSession) %>',  // the date format localized according to user language and country --%>
		<%-- localizedTimestampFormat: '<%= GeneralUtilities.getLocaleDateFormatForExtJs(permanentSession) %> H:i:s',  // the timestamp format localized according to user language and country --%>
		<%-- clientServerDateFormat: '<%= GeneralUtilities.getServerDateFormatExtJs() %>',  // the date format to be used when communicating with server --%>
		<%-- clientServerTimestampFormat: '<%= GeneralUtilities.getServerTimestampFormatExtJs() %>',   // the timestamp format to be used when communicating with server --%>
		
		<%-- <%if(parametersStatePersistenceEnabled != null) {%> --%>
		<%-- isParametersStatePersistenceEnabled: <%= Boolean.valueOf(parametersStatePersistenceEnabled) %>, --%>
		<%-- <%}%> --%>
		
		<%-- <%if(parameterStatePersistenceScope != null) {%> --%>
		<%-- parameterStatePersistenceScope: '<%= parameterStatePersistenceScope.toUpperCase() %>', --%>
		<%-- <%}%> --%>
		
		<%-- <%if(parametersMementoPersistenceEnabled != null) {%> --%>
		<%-- isParametersMementoPersistenceEnabled: <%= Boolean.valueOf(parametersMementoPersistenceEnabled) %>, --%>
		<%-- <%}%> --%>
		
		<%-- <%if(parameterMementoPersistenceScope != null) {%> --%>
		<%-- parameterMementoPersistenceScope: '<%= parameterMementoPersistenceScope.toUpperCase() %>', --%>
		<%-- <%}%> --%>
		
		<%-- <%if(parameterMementoPersistenceDepth != null) {%> --%>
		<%-- parameterMementoPersistenceDepth: <%= parameterMementoPersistenceDepth %>, --%>
		<%-- <%}%> --%>
		
		<%-- isSSOEnabled: <%= GeneralUtilities.isSSOEnabled() %> --%>

	};
});

sbiM.factory('sbiModule_user',function(){
	
	var user={};
	user.userUniqueIdentifier = '<%= StringEscapeUtils.escapeJavaScript(userUniqueIdentifier) %>';
	user.userId = '<%= StringEscapeUtils.escapeJavaScript(userId) %>';
	user.userName = '<%= StringEscapeUtils.escapeJavaScript(userName) %>'; 
	user.ismodeweb = <%= sbiMode.equals("WEB")? "true" : "false"%>;
	user.isSuperAdmin = '<%= userProfile != null && ((UserProfile)userProfile).getIsSuperadmin() %>';
	user.defaultRole = '<%= defaultRole != null ? StringEscapeUtils.escapeJavaScript(defaultRole)  : ""%>';
	
	// 	set roles
	user.roles =[];
	<% for(Object rol : userRoles) { 	%>
	user.roles.push('<%=StringEscapeUtils.escapeJavaScript(rol.toString())%>');
	<% } %>
	
	//set functionalities
	user.functionalities =[];
	<% if (userProfile != null && userProfile.getFunctionalities() != null && !userProfile.getFunctionalities().isEmpty()) {
		for(Object fun :  userProfile.getFunctionalities()){ %>
		user.functionalities.push('<%=StringEscapeUtils.escapeJavaScript(fun.toString())%>');
		<% } }%>
		
	return user;
});

sbiM.service('sbiModule_logger',function(){
	this.exec=true;
	this.log = function(val1,val2,val3){
		if(this.exec){
		console.log("[LOG] ",val1,(val2 || ""),(val3|| ""));
		}
	};
	
	this.trace = function(val1,val2,val3){
		if(this.exec){
		console.log("[TRACE] ",val1,(val2 || ""),(val3|| ""));
		}
	};
	
});

sbiM.service('sbiModule_translate', function() {
	this.addMessageFile = function(file){
		messageResource.load([file,"messages"], function(){});
	};
	
	this.load = function(key,sourceFile) {
		var sf= sourceFile == undefined? 'messages' : sourceFile;
		return messageResource.get(key, sf);
	};
});


sbiM.service('sbiModule_restServices', function($http, sbiModule_config,sbiModule_logger) {
	var alteredContextPath=null;

	this.alterContextPath=function(cpat){
		alteredContextPath=cpat;
	}

	function getBaseUrl(endP_path) {
		var burl= alteredContextPath==null? sbiModule_config.contextName +'/restful-services/'+ endP_path+"/"  : alteredContextPath+ "/restful-services/" + endP_path+"/" 
		alteredContextPath=null;
		return burl ;
	};

	this.get = function(endP_path, req_Path, item, conf) {
		(item == undefined || item==null) ? item = "" : item = "?" + encodeURIComponent(item).replace(/'/g,"%27").replace(/"/g,"%22").replace(/%3D/g,"=").replace(/%26/g,"&");
		sbiModule_logger.trace("GET: " +endP_path+"/"+ req_Path + "" + item,conf);
		return $http.get(getBaseUrl(endP_path) + "" + req_Path + "" + item, conf);
	};

	this.remove = function(endP_path, req_Path, item, conf) {
		item == undefined ? item = "" : item = "?" + item;
		sbiModule_logger.trace("REMOVE: "+endP_path+"/"+req_Path + "" + item,conf);
		return $http.post(getBaseUrl(endP_path) + "" + req_Path + "" + item, conf);
	};

	this.post = function(endP_path, req_Path, item, conf) {
		sbiModule_logger.trace("POST: "+endP_path+"/"+ req_Path,item,conf);
		return $http.post(getBaseUrl(endP_path) + "" + req_Path, item, conf);
	};
	
	this.put = function(endP_path, req_Path, item, conf) {
		sbiModule_logger.trace("PUT: "+endP_path+"/"+req_Path,item,conf);
		return $http.put(getBaseUrl(endP_path) + "" + req_Path, item, conf);
	};
	
	this.delete = function(endP_path, req_Path, item, conf) {
		(item == undefined || item==null) ? item = "" : item = "?" + encodeURIComponent(item).replace(/'/g,"%27").replace(/"/g,"%22").replace(/%3D/g,"=").replace(/%26/g,"&");
		sbiModule_logger.trace("PUT:" +endP_path+"/"+req_Path+ "" + item,conf);
		return $http.delete(getBaseUrl(endP_path) + "" + req_Path, conf);
	};
});

</script>