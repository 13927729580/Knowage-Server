-- -----------------------------------
-- Athena Database script
-- Important: Execute this script after creating the SpagoBI Tables
-- ------------------------------------


-- tables for different athena product types
CREATE TABLE `SBI_PRODUCT_TYPE` (
	`PRODUCT_TYPE_ID` INT(11) NOT NULL,
	`LABEL` VARCHAR(40) NOT NULL,
	`USER_IN` VARCHAR(100) NOT NULL,
	`USER_UP` VARCHAR(100) NULL DEFAULT NULL,
	`USER_DE` VARCHAR(100) NULL DEFAULT NULL,
	`TIME_IN` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	`TIME_UP` TIMESTAMP NULL DEFAULT NULL,
	`TIME_DE` TIMESTAMP NULL DEFAULT NULL,
	`SBI_VERSION_IN` VARCHAR(10) NULL DEFAULT NULL,
	`SBI_VERSION_UP` VARCHAR(10) NULL DEFAULT NULL,
	`SBI_VERSION_DE` VARCHAR(10) NULL DEFAULT NULL,
	`META_VERSION` VARCHAR(100) NULL DEFAULT NULL,
	`ORGANIZATION` VARCHAR(20) NULL DEFAULT NULL,
	PRIMARY KEY(`PRODUCT_TYPE_ID`),
	UNIQUE INDEX `XAK1SBI_PRODUCT_TYPE` (`LABEL`, `ORGANIZATION`)
)
COLLATE='LATIN1_SWEDISH_CI'
ENGINE=INNODB
;

-- mapping table between organizations (tenants) and product types
CREATE TABLE `SBI_ORGANIZATION_PRODUCT_TYPE` (
	`PRODUCT_TYPE_ID` INT(11) NOT NULL,
	`ORGANIZATION_ID` INT(11) NOT NULL,
	`USER_IN` VARCHAR(100) NOT NULL,
	`USER_UP` VARCHAR(100) NULL DEFAULT NULL,
	`USER_DE` VARCHAR(100) NULL DEFAULT NULL,
	`TIME_IN` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	`TIME_UP` TIMESTAMP NULL DEFAULT NULL,
	`TIME_DE` TIMESTAMP NULL DEFAULT NULL,
	`SBI_VERSION_IN` VARCHAR(10) NULL DEFAULT NULL,
	`SBI_VERSION_UP` VARCHAR(10) NULL DEFAULT NULL,
	`SBI_VERSION_DE` VARCHAR(10) NULL DEFAULT NULL,
	`META_VERSION` VARCHAR(100) NULL DEFAULT NULL,
	`ORGANIZATION` VARCHAR(20) NULL DEFAULT NULL,
	PRIMARY KEY(`PRODUCT_TYPE_ID`, `ORGANIZATION_ID`),
	INDEX `FK_ORGANIZATION_3` (`ORGANIZATION_ID`),
	CONSTRAINT `FK_PRODUCT_TYPE_1` FOREIGN KEY (`PRODUCT_TYPE_ID`) REFERENCES `SBI_PRODUCT_TYPE` (`PRODUCT_TYPE_ID`) ON UPDATE NO ACTION ON DELETE NO ACTION,
	CONSTRAINT `FK_ORGANIZATION_3` FOREIGN KEY (`ORGANIZATION_ID`) REFERENCES `SBI_ORGANIZATIONS` (`ID`) ON UPDATE NO ACTION ON DELETE NO ACTION
)
COLLATE='LATIN1_SWEDISH_CI'
ENGINE=INNODB
; 

-- modify sbi_user_func with product_id fk 
ALTER TABLE `SBI_USER_FUNC`
	ADD COLUMN `PRODUCT_TYPE_ID` INT(11) NOT NULL AFTER `DESCRIPTION`,
	ADD CONSTRAINT `FK_PRODUCT_TYPE` FOREIGN KEY (`PRODUCT_TYPE_ID`) REFERENCES `SBI_PRODUCT_TYPE` (`PRODUCT_TYPE_ID`);
	
-- modify sbi_authorization with product_id fk
ALTER TABLE `SBI_AUTHORIZATIONS`
	ADD COLUMN `PRODUCT_TYPE_ID` INT(11) NOT NULL AFTER `NAME`,
	ADD CONSTRAINT `FK2_PRODUCT_TYPE` FOREIGN KEY (`PRODUCT_TYPE_ID`) REFERENCES `SBI_PRODUCT_TYPE` (`PRODUCT_TYPE_ID`);


-- create: GLOSSARY tables
CREATE TABLE `SBI_GL_WORD` (
	`WORD_ID` Integer NOT NULL ,
	`WORD` VARCHAR (100),
	`DESCR` VARCHAR (500),
	`FORMULA` VARCHAR (500),
	`STATE` VARCHAR (30),
	`CATEGORY` VARCHAR (30),
	
	`USER_IN` VARCHAR(100) NOT NULL,
	`USER_UP` VARCHAR(100) NULL DEFAULT NULL,
	`USER_DE` VARCHAR(100) NULL DEFAULT NULL,
	`TIME_IN` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	`TIME_UP` TIMESTAMP NULL DEFAULT NULL,
	`TIME_DE` TIMESTAMP NULL DEFAULT NULL,
	`SBI_VERSION_IN` VARCHAR(10) NULL DEFAULT NULL,
	`SBI_VERSION_UP` VARCHAR(10) NULL DEFAULT NULL,
	`SBI_VERSION_DE` VARCHAR(10) NULL DEFAULT NULL,
	`META_VERSION` VARCHAR(100) NULL DEFAULT NULL,
	`ORGANIZATION` VARCHAR(20) NULL DEFAULT NULL,
PRIMARY KEY(`WORD_ID`) 
) ;

CREATE TABLE `SBI_GL_ATTRIBUTES` (
	`ATTRIBUTE_ID` Integer NOT NULL ,
	`ATTRIBUTE_CD` VARCHAR (30),
	`ATTRIBUTE_NM` VARCHAR (100),
	`ATTRIBUTE_DS` VARCHAR (500),
	`MANDATORY_FL` Integer,
	`ATTRIBUTES_TYPE` VARCHAR (50),
	`DOMAIN` VARCHAR (500),
	`FORMAT` VARCHAR (30),
	`DISPLAY_TP` VARCHAR (30),
	`ATTRIBUTES_ORDER` VARCHAR (30),
	
	`USER_IN` VARCHAR(100) NOT NULL,
	`USER_UP` VARCHAR(100) NULL DEFAULT NULL,
	`USER_DE` VARCHAR(100) NULL DEFAULT NULL,
	`TIME_IN` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	`TIME_UP` TIMESTAMP NULL DEFAULT NULL,
	`TIME_DE` TIMESTAMP NULL DEFAULT NULL,
	`SBI_VERSION_IN` VARCHAR(10) NULL DEFAULT NULL,
	`SBI_VERSION_UP` VARCHAR(10) NULL DEFAULT NULL,
	`SBI_VERSION_DE` VARCHAR(10) NULL DEFAULT NULL,
	`META_VERSION` VARCHAR(100) NULL DEFAULT NULL,
	`ORGANIZATION` VARCHAR(20) NULL DEFAULT NULL,
PRIMARY KEY(`ATTRIBUTE_ID`) 
);

CREATE TABLE `SBI_GL_WORD_ATTR` (
	`WORD_ID` Integer NOT NULL ,
	`ATTRIBUTE_ID` Integer NOT NULL ,
	`ATTR_VALUE` VARCHAR (500),
	`ATTR_ORDER` Integer,
	
	`USER_IN` VARCHAR(100) NOT NULL,
	`USER_UP` VARCHAR(100) NULL DEFAULT NULL,
	`USER_DE` VARCHAR(100) NULL DEFAULT NULL,
	`TIME_IN` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	`TIME_UP` TIMESTAMP NULL DEFAULT NULL,
	`TIME_DE` TIMESTAMP NULL DEFAULT NULL,
	`SBI_VERSION_IN` VARCHAR(10) NULL DEFAULT NULL,
	`SBI_VERSION_UP` VARCHAR(10) NULL DEFAULT NULL,
	`SBI_VERSION_DE` VARCHAR(10) NULL DEFAULT NULL,
	`META_VERSION` VARCHAR(100) NULL DEFAULT NULL,
	`ORGANIZATION` VARCHAR(20) NULL DEFAULT NULL,
PRIMARY KEY(`WORD_ID`,`ATTRIBUTE_ID`) 
);

CREATE TABLE `SB_GL_REFERENCES` (
	`WORD_ID` Integer NOT NULL ,
	`REF_WORD_ID` Integer NOT NULL ,
	`REFERENCES_ORDER` Integer,
	
	`USER_IN` VARCHAR(100) NOT NULL,
	`USER_UP` VARCHAR(100) NULL DEFAULT NULL,
	`USER_DE` VARCHAR(100) NULL DEFAULT NULL,
	`TIME_IN` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	`TIME_UP` TIMESTAMP NULL DEFAULT NULL,
	`TIME_DE` TIMESTAMP NULL DEFAULT NULL,
	`SBI_VERSION_IN` VARCHAR(10) NULL DEFAULT NULL,
	`SBI_VERSION_UP` VARCHAR(10) NULL DEFAULT NULL,
	`SBI_VERSION_DE` VARCHAR(10) NULL DEFAULT NULL,
	`META_VERSION` VARCHAR(100) NULL DEFAULT NULL,
	`ORGANIZATION` VARCHAR(20) NULL DEFAULT NULL,
PRIMARY KEY(`WORD_ID`,`REF_WORD_ID`) 
);

CREATE TABLE `SBI_GL_GLOSSARY` (
	`GLOSSARY_ID` Integer NOT NULL ,
	`GLOSSARY_CD` VARCHAR (30),
	`GLOSSARY_NM` VARCHAR (100),
	`GLOSSARY_DS` VARCHAR (500),
	
	`USER_IN` VARCHAR(100) NOT NULL,
	`USER_UP` VARCHAR(100) NULL DEFAULT NULL,
	`USER_DE` VARCHAR(100) NULL DEFAULT NULL,
	`TIME_IN` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	`TIME_UP` TIMESTAMP NULL DEFAULT NULL,
	`TIME_DE` TIMESTAMP NULL DEFAULT NULL,
	`SBI_VERSION_IN` VARCHAR(10) NULL DEFAULT NULL,
	`SBI_VERSION_UP` VARCHAR(10) NULL DEFAULT NULL,
	`SBI_VERSION_DE` VARCHAR(10) NULL DEFAULT NULL,
	`META_VERSION` VARCHAR(100) NULL DEFAULT NULL,
	`ORGANIZATION` VARCHAR(20) NULL DEFAULT NULL,
PRIMARY KEY(`GLOSSARY_ID`) 
);

CREATE TABLE `SBI_GL_CONTENTS` (
	`CONTENT_ID` Integer NOT NULL ,
	`GLOSSARY_ID` Integer NOT NULL ,
	`PARENT_ID` Integer NOT NULL ,
	`CONTENT_CD` VARCHAR (30),
	`CONTENT_NM` VARCHAR (100),
	`CONTENT_DS` VARCHAR (500),
	`DEPTH` Integer,
	
	`USER_IN` VARCHAR(100) NOT NULL,
	`USER_UP` VARCHAR(100) NULL DEFAULT NULL,
	`USER_DE` VARCHAR(100) NULL DEFAULT NULL,
	`TIME_IN` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	`TIME_UP` TIMESTAMP NULL DEFAULT NULL,
	`TIME_DE` TIMESTAMP NULL DEFAULT NULL,
	`SBI_VERSION_IN` VARCHAR(10) NULL DEFAULT NULL,
	`SBI_VERSION_UP` VARCHAR(10) NULL DEFAULT NULL,
	`SBI_VERSION_DE` VARCHAR(10) NULL DEFAULT NULL,
	`META_VERSION` VARCHAR(100) NULL DEFAULT NULL,
	`ORGANIZATION` VARCHAR(20) NULL DEFAULT NULL,
PRIMARY KEY(`CONTENT_ID`) 
) 
;

CREATE TABLE `SBI_GL_WLIST` (
	`CONTENT_ID` Integer NOT NULL ,
	`WORD_ID` Integer NOT NULL ,
	`WORD_ORDER` Integer,
	
	`USER_IN` VARCHAR(100) NOT NULL,
	`USER_UP` VARCHAR(100) NULL DEFAULT NULL,
	`USER_DE` VARCHAR(100) NULL DEFAULT NULL,
	`TIME_IN` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	`TIME_UP` TIMESTAMP NULL DEFAULT NULL,
	`TIME_DE` TIMESTAMP NULL DEFAULT NULL,
	`SBI_VERSION_IN` VARCHAR(10) NULL DEFAULT NULL,
	`SBI_VERSION_UP` VARCHAR(10) NULL DEFAULT NULL,
	`SBI_VERSION_DE` VARCHAR(10) NULL DEFAULT NULL,
	`META_VERSION` VARCHAR(100) NULL DEFAULT NULL,
	`ORGANIZATION` VARCHAR(20) NULL DEFAULT NULL,
PRIMARY KEY(`CONTENT_ID`,`WORD_ID`) 
);


-- Create Indexes section


-- Create Foreign keys section

ALTER TABLE `SBI_GL_WORD_ATTR` ADD FOREIGN KEY (`WORD_ID`) REFERENCES `SBI_GL_WORD` (`WORD_ID`);

ALTER TABLE `SB_GL_REFERENCES` ADD FOREIGN KEY (`WORD_ID`) REFERENCES `SBI_GL_WORD` (`WORD_ID`);

ALTER TABLE `SB_GL_REFERENCES` ADD FOREIGN KEY (`REF_WORD_ID`) REFERENCES `SBI_GL_WORD` (`WORD_ID`);

ALTER TABLE `SBI_GL_WLIST` ADD FOREIGN KEY (`WORD_ID`) REFERENCES `SBI_GL_WORD` (`WORD_ID`);

ALTER TABLE `SBI_GL_WORD_ATTR` ADD FOREIGN KEY (`ATTRIBUTE_ID`) REFERENCES `SBI_GL_ATTRIBUTES` (`ATTRIBUTE_ID`);

ALTER TABLE `SBI_GL_CONTENTS` ADD FOREIGN KEY (`GLOSSARY_ID`) REFERENCES `SBI_GL_GLOSSARY` (`GLOSSARY_ID`);

ALTER TABLE `SBI_GL_CONTENTS` ADD FOREIGN KEY (`PARENT_ID`) REFERENCES `SBI_GL_CONTENTS` (`CONTENT_ID`);

ALTER TABLE `SBI_GL_WLIST` ADD FOREIGN KEY (`CONTENT_ID`) REFERENCES `SBI_GL_CONTENTS` (`CONTENT_ID`);
	
	
