<project name="${project.name}" default="makeDist" basedir=".">
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!--   DEFINIZIONE FILE DI PROPERTY						                                      -->
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<property file="build.properties" />
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!--   DEFINIZIONE CLASSPATH						                                            -->
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<path id="jar.classpath">
		<pathelement path="${classpath}" />
		<!-- LIBRERIE SPECIFICHE APPLICATIVO  -->
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<!-- LIBRERIE ESTERNE DEL WEB CONTAINER necessarie per la compilazione -->
		<fileset dir="${runtime.lib}">
			<include name="**/*.jar" />
		</fileset>
		
		<!-- LIBRERIE DI KNOWAGEWHATIFENGINE -->
		<fileset dir="../../../../knowagewhatifengine/dist">
			<include name="**/*.jar" />
		</fileset>
		
		<!-- CLASSI DI KNOWAGEWHATIFENGINE -->
		<fileset dir="../../../../knowagewhatifengine/web-content/WEB-INF/lib/">
			<include name="**/*.jar" />
		</fileset>
	</path>


	<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	<!--   PULIZIA AMBIENTE						                                                -->
	<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	<target name="clean">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}" />
		<delete dir="${dist}/${project.name}" />
	</target>
	<target name="init" depends="clean">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}" />
	</target>


	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!--   AGGIORNAMENTO DELLA VERSIONE NEL MANIFEST                                                                -->
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<target name="upgrade.mf">
		<replaceregexp file="${src}/META-INF/MANIFEST.MF">
			<regexp pattern="(Implementation-Version:)(.*?$)" />
			<substitution expression="(^)Implementation-Version: ${project.version}($)" />
		</replaceregexp>
	</target>
	<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	<!--   COMPILAZIONE							                                                  -->
	<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	<target name="compile" description="compile the source">
		<antcall target="upgrade.mf" />
		<!-- Compile the java code from ${src} into ${build}/${webapp_name}/WEB-INF/classes -->
		<javac srcdir="${src}" destdir="${build}" debug="on" encoding="${encoding}">
			<classpath refid="jar.classpath" />
		</javac>
		<exec dir="${project.dir}" executable="svn" output="${build}/svn.properties">
			<arg value="info" />
		</exec>
	</target>

	<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	<!--   COPIA EVENTUALI RISORSE     Aggiungere eventuali altri tipi di file        -->
	<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	<target name="copy.artifacts" depends="compile">
		<copy todir="${build}">
			<fileset dir="${src}">
				<exclude name="**/*.svn" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>

	<target name="obfuscate">
		<taskdef resource="proguard/ant/task.properties" classpath="proguard.jar" />
		<proguard>
			-injars       ${dist}/${jar.name}-${project.version}.jar
			-outjars      ${dist}/${jar.name}-${project.version}-obfuscated.jar

			-libraryjars  ${java.home}/lib/rt.jar
			-libraryjars  ${lib.dir}
			-libraryjars  ${runtime.lib}
			-libraryjars  ${knowageutils.json.dir}/dist
			-libraryjars  ${knowageutils.dir}/dist



			-verbose
			
			-dontwarn

			-keepparameternames
			-renamesourcefileattribute SourceFile
			-keepattributes Exceptions,InnerClasses,Signature,Deprecated,
			                SourceFile,LineNumberTable,*Annotation*,EnclosingMethod

			-keep public class * {
			    public protected *;
			}

			-keepclassmembernames class * {
			    java.lang.Class class$(java.lang.String);
			    java.lang.Class class$(java.lang.String, boolean);
			}

			-keepclasseswithmembernames,includedescriptorclasses class * {
			    native &lt;methods&gt;;
			}

			-keepclassmembers,allowoptimization enum * {
			    public static **[] values();
			    public static ** valueOf(java.lang.String);
			}

			-keepclassmembers class * implements java.io.Serializable {
			    static final long serialVersionUID;
			    private static final java.io.ObjectStreamField[] serialPersistentFields;
			    private void writeObject(java.io.ObjectOutputStream);
			    private void readObject(java.io.ObjectInputStream);
			    java.lang.Object writeReplace();
			    java.lang.Object readResolve();
			}
			
			
		</proguard>
		<delete file="${dist}/${jar.name}-${project.version}.jar" />
		<move file="${dist}/${jar.name}-${project.version}-obfuscated.jar" tofile="${dist}/${jar.name}-${project.version}.jar" />
	</target>
	
	<target name="sign">
		<signjar
		    alias="${keystore.alias}" keystore="${keystore}"
		    storepass="${keystore.pass}" >
		  <path>
		    <fileset dir="${dist}" includes="${jar.name}-${project.version}.jar" />
		  </path>
		</signjar>
	</target>

	<target name="create.jar" depends="init,copy.artifacts">
		<mkdir dir="${dist}" />
		<delete file="${dist}/${jar.name}-${project.version}.jar" />
		<jar destfile="${dist}/${jar.name}-${project.version}.jar" basedir="${build}" />
		<antcall target="obfuscate" /> 
		<antcall target="sign" />
	</target>

	<target name="javadoc">
		<javadoc packagenames="*" sourcepath="${src}" defaultexcludes="yes" destdir="${dist}/javadoc" author="true" version="true" use="true">
			<classpath refid="jar.classpath" />
		</javadoc>
	</target>

	<target name="makeDist">
		<antcall target="create.jar" />
		<!-- <antcall target="javadoc" />  -->
	</target>

</project>
