<project name="${project.name}" default="makeDist" basedir=".">
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!--   DEFINIZIONE FILE DI PROPERTY						                                      -->
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<property file="build.properties" />
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!--   DEFINIZIONE CLASSPATH						                                            -->
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<path id="web.classpath">
		<pathelement path="${classpath}" />
		<!-- LIBRERIE SPECIFICHE APPLICATIVO  -->
		<fileset dir="${web.lib}">
			<include name="**/*.jar" />
		</fileset>
		<!-- LIBRERIE ESTERNE DEL WEB CONTAINER necessarie per la compilazione -->
		<!-- ma che non devono essere comprese nel war                         -->
		<fileset dir="${runtime.lib}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	<!--   PULIZIA AMBIENTE						                                                -->
	<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	<target name="clean">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}" />
		<delete dir="${dist}/${webapp_name}" />
	</target>
	<target name="init" depends="clean">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}" />
		<mkdir dir="${build}/${webapp_name}/WEB-INF/classes" />
	</target>



	<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	<!--  AGGIORNAMENTO JAR KNOWAGE.UTILS									                                  -->
	<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	<target name="knowage.utils.update" description="Updates knowage.utils library from distribution folder (THIS JAR MUST BE EXISTING)">
		<!-- deletes any previuos knowage.utils -->
		<delete>
			<fileset dir="${web.dir}/WEB-INF/lib" includes="**/knowage.utils*.jar" />
		</delete>
		<delete>
					<fileset dir="${web.dir}/WEB-INF/lib" includes="**/jdbc.core-*.jar"/>
		</delete>
		<!-- copies the newly created jar file -->
		<copy file="${jdbc.core.dir}/dist/jdbc.core-${project.version}.jar" todir="${web.dir}/WEB-INF/lib" overwrite="true" />
		<copy file="${knowageutils.json.dir}/dist/knowage.utils.json-${project.version}.jar" todir="${web.dir}/WEB-INF/lib" overwrite="true" />
		<copy file="${knowageutils.dir}/dist/knowage.utils-${project.version}.jar" todir="${web.dir}/WEB-INF/lib" overwrite="true" />
	</target>

	<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	<!--   AGGIORNAMENTO JAR QBE.CORE							                                    -->
	<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	<target name="qbe.core.update" description="Updates qbe.core library from distribution folder (THIS JAR MUST BE EXISTING)">
		<!-- deletes any previuos sbi.utils -->
		<delete>
			<fileset dir="${web.dir}/WEB-INF/lib" includes="**/qbe.core*.jar" />
		</delete>
		<!-- copies the newly created jar file -->
		<copy file="${qbe.core.dir}/dist/qbe.core-${project.version}.jar" todir="${web.dir}/WEB-INF/lib" overwrite="true" />
	</target>
	
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	<!--   AGGIORNAMENTO JAR KNOWAGE.DAO							                                  -->
	<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
		<target name="knowage.dao.update" description="Updates knowage.dao library from distribution folder (THIS JAR MUST BE EXISTING)">
			<!-- deletes any previuos qbe.core -->
			<delete>
				<fileset dir="${web.dir}/WEB-INF/lib" includes="**/knowage.dao*.jar" />
			</delete>

			<!-- copies the newly created jar file -->
			<copy file="${knowage.dao.dir}/dist/knowage.dao-${project.version}.jar" todir="${web.dir}/WEB-INF/lib" overwrite="true" />

		</target>

	
	
	<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	<!--   COMPILAZIONE							                                                  -->
	<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	<target name="compile" depends="knowage.utils.update,qbe.core.update,knowage.dao.update" description="compile the source">
		<echo message="${build}/${webapp_name}/WEB-INF/classes"/>
		<!-- Compile the java code from ${src} into ${build}/${webapp_name}/WEB-INF/classes -->
		<javac srcdir="${src}" destdir="${build}/${webapp_name}/WEB-INF/classes" debug="on">
			<classpath refid="web.classpath" />
		</javac>
	</target>
	
	<target name="compile.tests"  description="compile the test">
			
			<!-- Compile the java code from ${test} into ${build}/${webapp_name}/WEB-INF/classes -->
			<javac srcdir="${test}" destdir="${build}/${webapp_name}/WEB-INF/classes" >
				<classpath refid="web.classpath" />
			</javac>
		</target>

	
	<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	<!--   CREAZIONE JAR							                                    -->
	<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	<path id="svnant.classpath">
		<fileset dir="../../ant/antsvn-lib">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<target name="jar" depends="copy.artifacts" description="Generates executable jar file">
		<typedef resource="org/tigris/subversion/svnant/svnantlib.xml" classpathref="svnant.classpath" />

		<!-- 
		The following task has been commented out because it causes an error. 
		See: http://www.spagoworld.org/jforum/posts/list/1045.page 
		-->
		<!-- 
		<svn>
			<wcVersion path="${src}" prefix="svn." />
		</svn>
		-->

		<jar destfile="${build}/${webapp_name}/WEB-INF/lib/knowagewhatifengine.core-${project.version}.jar">
			<fileset dir="${build}/${webapp_name}/WEB-INF/classes/">
				<include name="it/**/*" />
			</fileset>

			<manifest>
				<attribute name="Implementation-Version" value="${svn.revision.max}" />
			</manifest>
		</jar>
		<delete dir="${build}/${webapp_name}/WEB-INF/classes/it" />
	</target>
	
	<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	<!--   COPIA DELLE JSP,CSS,...                                                    -->
	<!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	<target name="copy.artifacts" depends="compile">
		<copy todir="${build}/${webapp_name}">
			<fileset dir="${web.dir}">
				<exclude name="**/*.svn" />
			</fileset>
		</copy>

		<copy todir="${build}/${webapp_name}/WEB-INF/classes">
			<fileset dir="${src}">
				<exclude name="**/*.java" />
				<exclude name="**/*.svn" />
			</fileset>
		</copy>
		
	</target>

	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!--   ATTIVITA' SPECIFICHE PER APPLICATION SERVER                                  -->
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

	<target name="tomcat">

	</target>

	<target name="jboss6">
			<delete file="${build}/${webapp_name}/WEB-INF/lib/commons-logging.jar" />
			<delete file="${build}/${webapp_name}/WEB-INF/lib/dom4j-1.6.jar" />
			<delete file="${build}/${webapp_name}/WEB-INF/lib/jaxen-1.1-beta-6.jar" />	
			<delete file="${build}/${webapp_name}/WEB-INF/lib/jta.jar" />	
			<delete file="${build}/${webapp_name}/WEB-INF/lib/xercesImpl-2.6.2.jar" />	
			<delete file="${build}/${webapp_name}/WEB-INF/lib/xml-apis.jar" />	
			<delete file="${build}/${webapp_name}/WEB-INF/lib/xmlbeans-2.3.0.jar" />	
			<delete file="${build}/${webapp_name}/WEB-INF/lib/slf4j-api-1.6.1.jar" />
			<delete file="${build}/${webapp_name}/WEB-INF/lib/ojdbc5.jar" />
			<delete file="${build}/${webapp_name}/WEB-INF/lib/antlr-2.7.6.jar" />
			<delete file="${build}/${webapp_name}/WEB-INF/lib/javassist-3.12.0.GA.jar" />
			<delete file="${build}/${webapp_name}/WEB-INF/lib/jta-1.1.jar" />
			<delete file="${build}/${webapp_name}/WEB-INF/lib/asm.jar" />
	</target>

	<target name="liferay.jboss">
		<delete file="${build}/${webapp_name}/WEB-INF/lib/dom4j-1.6.jar" />
		<delete file="${build}/${webapp_name}/WEB-INF/lib/xercesImpl-2.6.2.jar" />
		<delete file="${build}/${webapp_name}/WEB-INF/lib/xml-apis-2.0.2.jar" />
		<delete file="${build}/${webapp_name}/WEB-INF/lib/portlet-api-1.0.jar" />

	</target>

	<target name="liferay.tomcat">
	</target>


	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!--   ATTIVITA' SPECIFICHE PER COMPRESSIONE CODICE JS                              -->
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

	<target name="production" depends="create-production">

	</target>

	<target name="delete-debug">

	</target>

	<target name="create-debug" depends="delete-debug">
	
	</target>

	<target name="create-production" depends="create-debug">

	</target>


	<target name="development">


	</target>


	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!--   ATTIVITA' SPECIFICHE PER LA GESTIONE DEL SSI                          -->
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

	<target name="sso.cas">

		<replace file="${build}/${webapp_name}/WEB-INF/web.xml">
			<replacetoken><![CDATA[<!-- START-CAS]]></replacetoken>
			<replacevalue><![CDATA[<!-- START-CAS -->]]></replacevalue>
		</replace>
		<replace file="${build}/${webapp_name}/WEB-INF/web.xml">
			<replacetoken><![CDATA[END-CAS -->]]></replacetoken>
			<replacevalue><![CDATA[<!-- END-CAS -->]]></replacevalue>
		</replace>

	</target>

	<target name="sso.no_sso">
	</target>

	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!--   AGGIORNAMENTO DELLA VERSIONE NEL MANIFEST                                                                -->
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<target name="upgrade.mf">
		<replaceregexp file="${build}/${webapp_name}/META-INF/MANIFEST.MF">
			<regexp pattern="(Implementation-Version:)(.*?$)" />
			<substitution expression="(^)Implementation-Version: ${project.version}($)" />
		</replaceregexp>
	</target>

	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!--   WAR CREATION FOR DEMO ALL IN ONE                                                               -->
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

	<target name="create.war" depends="init,copy.artifacts">
		<antcall target="${sso}" />
		<antcall target="${specific.ant.task}" />
		<antcall target="${ext.deploy}" />
		<antcall target="upgrade.mf" />

		<mkdir dir="${dist}" />
		<delete file="${dist}/${war_name}" />
		<war warfile="${dist}/${war_name}" webxml="${build}/${webapp_name}/WEB-INF/web.xml" manifest="${build}/${webapp_name}/META-INF/MANIFEST.MF" basedir="${build}/${webapp_name}" />
	</target>
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!--   WAR CREATION FOR SINGLE PACKAGES                                                               -->
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

	<target name="create-bin.war" depends="init,jar,copy.artifacts">
		<antcall target="${sso}" />
		<antcall target="${specific.ant.task}" />
		<antcall target="${ext.deploy}" />
		<antcall target="upgrade.mf" />

		<mkdir dir="${dist}" />
		<delete file="${dist}/${war_name}" />
		<war warfile="${dist}/${war_name}" webxml="${build}/${webapp_name}/WEB-INF/web.xml" manifest="${build}/${webapp_name}/META-INF/MANIFEST.MF" basedir="${build}/${webapp_name}" excludes="**/**/js/lib/highcharts-2.1.4/**" />
	</target>
	<target name="javadoc">
		<javadoc packagenames="*" sourcepath="${src}" defaultexcludes="yes" destdir="${dist}/javadoc" author="true" version="true" use="true">
			<classpath refid="web.classpath" />
		</javadoc>
	</target>

	<target name="package">
		<zip destfile="../../../../dist/${project.name}-bin-${project.version}_${project.date}.zip" basedir="${dist}" />
	</target>

	<target name="makeDist">
		<antcall target="create.war" />
	</target>
	
	<target name="knowagewhatif.unitTests" depends="compile.tests">
		<antcall target="test.junit" />
		
	
	</target>
	
	<target name="knowagewhatif.e2eTests" depends="knowagewhatif.unitTests">
			<antcall target="test.protractor" />
			
		
		</target>
	
	<target name="test.junit" >
		
		<junit haltonfailure ="false" printsummary="true" showoutput="true">
			
			<classpath location="${runtime.lib}/junit.jar" />
			<classpath location = "../../../../knowagewhatifengine/ant-build/knowagewhatifengine/WEB-INF/classes"/>
			
			<batchtest  todir="${test}">
				<fileset dir="${test}">
						    	
					<include name="**/*Test.java"/>
					<exclude name="**/integration*/*.java"/>
					<exclude name="**/test*/*.java"/>
				</fileset>
				
			</batchtest>
			
			<formatter  type="xml"/>
			
		</junit>
		
	</target>
	
	<target name="test.protractor" >
			
		<exec dir="${conf.js.dir}" executable="/bin/sh" >
			<arg value ="-c"/>
			<arg value ="${protractor.dir}/protractor conf.js"/>
		</exec>
													
	</target>
	
	
	

</project>
