#set($dataFields=$data.metaData.fields) ## columns of data table
#set($dataColumnsMapper={})
#foreach ($dataField in $dataFields) ## conversion column name to internal column name
#if($dataField.class.name == 'java.util.LinkedHashMap')
#set($workAroundNoPrint=$dataColumnsMapper.put($dataField.header.toLowerCase().trim() , $dataField.name))
#end
#end
#set($rows=$data.rows) ## data in table rows
#set($categorieColumnsMapped=$dataColumnsMapper.get($drilldownCategory.toLowerCase().trim()))
	#set($name= "name")
	#set($col= "column")
#if($chart.CHART.VALUES.SERIE.class.name == 'java.util.ArrayList')
#foreach($serie in $chart.CHART.VALUES.SERIE)
	#if($serie.get($name) == $drilldownSerie)
	#set($mainSerieName =$serie.get($name))
	#set($mainSerie =$serie)
	#set($groupingFunction=$serie.get("groupingFunction"))
	#end
#end
#elseif($chart.CHART.VALUES.SERIE.class.name == 'java.util.LinkedHashMap')
	#if($chart.CHART.VALUES.SERIE.name == $drilldownSerie)
		#set($mainSerie = $chart.CHART.VALUES.SERIE)
		#set($mainSerieName = $mainSerie.name)
	#set($groupingFunction=$mainSerie.groupingFunction)
	#end
#else
#set($mainSerieName = $drilldownSerie)
#end

#if(($chart.groupCategories =='true' || $chart.groupSeriesCateg =='true') && $chart.isCockpitEngine == 'false')
#set($categorieColumns = $chart.CHART.VALUES.CATEGORY.get(0))
#else
#set($categorieColumns = $chart.CHART.VALUES.CATEGORY) ## metadata related to categories
#end
#set($xAxisMap = $datasettransformer.getXAxisMap($categorieColumns, $chart.CHART.categoryDate))
#set($isDateTime = false)
#if($chart.CHART.dateTime && $chart.CHART.dateTime=="true")
	#if($chart.CHART.categoryDate)
		#set($categoryDate = $chart.CHART.categoryDate)
		#if($chart.CHART.categoryDate==$drilldownCategoryName)
			#set($isDateTime = true)
		#end
	#else
		#set($isDateTime = true)
	#end
#end
#foreach($a in $xAxisMap)
#if($a.name==$drilldownCategoryName.replaceAll(" ",""))
#set($indexAxis = $a.id)
#end
#end

#set($underScore = "_")
#if($chart.CHART.isCockpitEngine=="true")
	#set($serieWithAgg = "$mainSerieName.toLowerCase()$underScore$groupingFunction.toLowerCase()")
#else
	#set($serieWithAgg=$mainSerieName.toLowerCase())
#end

#set($serieColumnsMapped=$dataColumnsMapper.get($serieWithAgg))

{
	name:	'$selectedCategory',
	xAxis: $indexAxis,
	#if($drilldownCategoryName != '')
	#set ($category=$drilldownCategoryName.replaceAll(" ",""))
	#else
	#set ($category=$drilldownCategory)
	#end
	category: '$category',
	
	serieName:'$drilldownSerie',
     pointRange: 1,
     "dataLabels": {
			"enabled": $mainSerie.showValue,
			"labelFormat": '${mainSerie.prefixChar}{y}${mainSerie.precision}${mainSerie.postfixChar}',
			formatter: function() {
			                     
			                    var value = this.y;	
			                    var newValue = "";		                    
			                    
		                      	var scaleFactor = '${mainSerie.scaleFactor}';
		                      	
		                      	var prefixValue = '${mainSerie.prefixChar}';
		                      	var sufixValue = '${mainSerie.postfixChar}';
		                      	
		                      	
		                      	var decimalPoints = Highcharts.getOptions().lang.decimalPoint;
		                      	var thousandsSep = Highcharts.getOptions().lang.thousandsSep;
		                      	
		                      	var precision = '${mainSerie.precision}';
		                      	
		                      	switch(scaleFactor.toUpperCase()) {
		                      	
		                      		case "EMPTY":
		                      			/* No selection is provided for the number to be displayed as the data label (pure value). */
		                      			newValue = Highcharts.numberFormat(value,precision,decimalPoints,thousandsSep);		                      			
		                      			break;
		                      		case "K":
		                      			newValue = Highcharts.numberFormat(value/Math.pow(10,3),precision,decimalPoints,thousandsSep) + "k";	
		                      			break;
		                      		case "M":
		                      			newValue = Highcharts.numberFormat(value/Math.pow(10,6),precision,decimalPoints,thousandsSep) + "M";	
		                      			break;
		                      		case "G":
		                      			newValue = Highcharts.numberFormat(value/Math.pow(10,9),precision,decimalPoints,thousandsSep) + "G";
		                      			break;
	                      			case "T":
		                      			newValue = Highcharts.numberFormat(value/Math.pow(10,12),precision,decimalPoints,thousandsSep) + "T";
		                      			break;
		                      		case "P":
		                      			newValue = Highcharts.numberFormat(value/Math.pow(10,15),precision,decimalPoints,thousandsSep) + "P";
		                      			break;
	                      			case "E":
		                      			newValue = Highcharts.numberFormat(value/Math.pow(10,18),precision,decimalPoints,thousandsSep) + "E";
		                      			break;
	                      			default:
	                      				/* The same as for the case when user picked "no selection" - in case when the chart 
	                      				template does not contain the scale factor for current serie */
	                      				newValue = Highcharts.numberFormat(value,precision,decimalPoints,thousandsSep);	
		                      			break;
		                      	
		                      	}						
	                        		                       
	                          	return prefixValue + ' ' + newValue + ' ' + sufixValue;
			            	},
		},
     "tooltip": {
			"valuePrefix": "$mainSerie.prefixChar",
			"valueSuffix": "$mainSerie.postfixChar",
			"valueDecimals": $mainSerie.precision,
			"ttBackColor": "$mainSerie.TOOLTIP.backgroundColor"
		},
	data: [
#foreach($row in $rows)
#set ($serieValue=$row.get($serieColumnsMapped))
#set ($serieName= $row.get($categorieColumnsMapped))
		{
			drilldown: $enableNextDrilldown,
			y: $serieValue,
			name: '$serieName',
			#if($category == $categoryDate)
				#if($serieName.length()>10)
				#set($date = $serieName.replace(" " , "-").replace(":" , "-").replace(":" , "-").replace("." , "-").split("-"))
				#set($hour= $date.get(3))
				#set($min= $date.get(4))
				#set($sec= $date.get(5))
				#set($milisec= $date.get(6))
				#else
				#set($date = $serieName.split("-"))
				#end
			
				#if($date.get(0).length()>2)
				#set($day = $date.get(2))
				#set($year= $date.get(0))
				#else
				#set($day = $date.get(0))
				#set($year= $date.get(2))
				#end
				#set($month = $Integer.parseInt($date.get(1)))
				#set($month = $month - 1)
		
			#if($serieName.length()>10)
			x:	Date.UTC($year, $month, $day, $hour, $min, $sec, $milisec),	
			#else 
			x:	Date.UTC($year, $month, $day),	
			
			#end
			#end
		
		},
#end
	],

}